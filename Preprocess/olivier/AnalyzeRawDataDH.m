%% Show raster based on threshold detection after artifact removal
%Need to detect the event marker first (see GetEvtMarkerDH.m )

clear all
close all

%% Parameters
NumFrame = 2;% which pattern number do you want to display the responses to? You can try all, the pattern shape will be displayed by the code. 
NbTrials = 10;%How many trials max do you want to display ?

WindowSize = 500;%Parameter for smoothing - don't worry about it, this is for artifact removal

TimeBefore = 0.5*20000;%How much time before the stim plotted ? In samples (seconds*sampling rate)
TimeAfter = 0.5*20000;%Muw much time after ? Same unit 

duration_stim = 0.010*20000;%Duration of the stimulus, to modify. Same unit

ThresFactor = 6;%To detect spikes, the threshold is set at mean+ThresFactor*(standard dev). Should be fine for all recordings. 

ElectrodesFile = '/Users/oliviermarre/Documents/RawData/20180125/BCKG_ND2_1pc_50MS.raw';%raw file
StimFile = '20180125/test_frames.mat';%test_frames.mat file
RasterFile = '20180125/raster_ND2_1pc_50MS.mat';%Output, to store the raster
EvtFile = '20180125/ND2_1pc_50MS_evt.mat';%Input. The one generated by GetEvtMarkerDH.m 


%% Code 

load(StimFile,'-mat')

raster_duration = duration_stim + TimeAfter + TimeBefore;

%% get the event times


load(StimFile,'-mat');

[UniqueFrames,ia,OrderFrames] = unique(TotalBlock','rows');


load(EvtFile,'-mat')

EvtTimes = StimBegin;

SpotIndex = find(OrderFrames==NumFrame );

disp('PatternChosen: ')
UniqueFrames(NumFrame,:)

SpotIndex = SpotIndex(SpotIndex<=length(EvtTimes));

SpotTime = EvtTimes(SpotIndex);

SpotTime = SpotTime(1:NbTrials);

StimBegin = SpotTime;

StimEnd = StimBegin + duration_stim;

%% create the raster

raster = cell(1,256);
SpikeCount = zeros(1,256);


fid = fopen(ElectrodesFile,'r');

HeaderText = '';
stop=0;
HeaderSize=0;

while (stop==0)&&(HeaderSize<=10000)%to avoid infinite loop
    ch = fread(fid, 1, 'uint8=>char')';
    HeaderSize = HeaderSize + 1;
    HeaderText = [HeaderText ch];
    if (HeaderSize>2)
        if strcmp(HeaderText((HeaderSize-2):HeaderSize),'EOH')
            stop = 1;
        end
    end
end

HeaderSize = HeaderSize+2;%Because there is two characters after the EOH, before the raw data. 

MaxStim = NbTrials;

for istim=1:min(MaxStim,length(StimBegin))

    istim
    
    StartTime = StimBegin(istim) - TimeBefore;
    Duration = StimEnd(istim) - StimBegin(istim) + TimeAfter + TimeBefore;

    fseek(fid,HeaderSize+2*256*StartTime,'bof');

    data = fread(fid,256*Duration,'uint16');

    data = 0.1042*(double(data)-32767);

    if length(data) == 256*Duration
        data = reshape(data,[256 Duration]);
        
        if istim<=MaxStim
            StoredData{istim} = data;
        end
    end
    
end
       

for ielec=1:256

    clear d
    
    for i=1:length(StoredData)
        d(1:size(StoredData{i},2),i) = StoredData{i}(ielec,:)';
    end

    m = mean(d,2);
    dsub = d - m*ones(1,min(MaxStim,length(StimBegin)));
        
    for istim=1:min(MaxStim,length(StimBegin))
    
%         
%         TimeAround = [(1:TimeBefore) ((TimeBefore + StimEnd(istim) - StimBegin(istim)):(TimeBefore + StimEnd(istim) - StimBegin(istim) + TimeAfter))];
%         TimeStim = ((TimeBefore+1) : (TimeBefore + StimEnd(istim) - StimBegin(istim)) );


            if ielec==100 & istim==1
                disp('100')
            end
            if ielec==170 & istim==1
                disp('170')
            end

            TimeAround = [(1:TimeBefore) ((TimeBefore + StimEnd(istim) - StimBegin(istim)):(TimeBefore + StimEnd(istim) - StimBegin(istim) + TimeAfter))];
            TimeStim = ((TimeBefore+1) : (TimeBefore + StimEnd(istim) - StimBegin(istim)) );

            Filtered = smooth(dsub(:,istim)',WindowSize,'lowess');

            MADrest = median(abs(dsub(TimeAround,istim) - Filtered(TimeAround)));

            MADstim = median(abs(dsub(TimeStim,istim) - Filtered(TimeStim)));

            Limit = [];
            Limit(TimeAround) = MADrest;
            Limit(TimeStim) = MADstim;
            Limit = Limit*ThresFactor;
            if length(Limit)>size(dsub,1)
                Limit = Limit(1:size(dsub,1));
            else
                if length(Limit)<size(dsub,1)
                    Limit(end+1:size(dsub,1)) = 0;
                end
            end
            Limit = Limit(:);
            Limit = Filtered - Limit;
            Limit = Limit';

            Spikes = find(dsub(1:end-1,istim)'>Limit(1:end-1) & dsub(2:end,istim)'<=Limit(2:end))+1;

%             m = median(dsub(:,istim));
%             MAD = median(abs(dsub(:,istim) - m));
            
%             Spikes = find(dsub(1:end-1,istim)> ThresFactor*MAD & dsub(2:end,istim)<= ThresFactor*MAD)+1;

            raster{ielec}((SpikeCount(ielec)+1):(SpikeCount(ielec)+length(Spikes)),1) = Spikes;
            raster{ielec}((SpikeCount(ielec)+1):(SpikeCount(ielec)+length(Spikes)),2) = istim;

            SpikeCount(ielec) = SpikeCount(ielec) + length(Spikes);
        end

    end
    

% 
% StartTime = StimBegin(1) - TimeBefore;
% Duration = StimEnd(1) - StimBegin(1) + TimeAfter;
% 
% fseek(fid,HeaderSize+2*252*StartTime,'bof');
% 
% data = fread(fid,252*Duration,'uint16');
% 
% data = 0.1042*(double(data)-32767);
% 
% data = reshape(data,[252 Duration]);
% 
% fclose(fid);

save(RasterFile,'raster','StoredData','TimeBefore','TimeAfter','raster_duration','StimBegin','StimEnd','-mat')

%% Display 

load('PositionsElec.mat')

figure(1);

for id_elec=1:length(Positions)
    fr_times = [];
    fr_repeat = [];
% 
%     LineCount = 1;
% 
%     for i=1:length(StimStart)
%         times = SpikeTimes{id_elec,i};
%         fr_times = [fr_times ; times(:)];
%         fr_repeat = [fr_repeat ; LineCount*ones(length(times),1)];
%         LineCount = LineCount + 1;
%     end
%     
    TimesTot =  (raster{id_elec}(:,1)/raster_duration + double(Positions(id_elec,1)));
    RepeatTot =  (raster{id_elec}(:,2)/length(StimBegin) + double(Positions(id_elec,2)));

    figure(1);
    plot(TimesTot,RepeatTot,'.','color','b');%,'MarkerSize',15);
    hold on

%     TimesTot = [TimesTot ; (fr_times(:)/duration_raster + CellPos(icell,1))];
%     RepeatTot = [RepeatTot ; (fr_repeat(:)/length(rep_beg_index) + CellPos(icell,2))];

    
end

figure(1)
for i=1:16
    plot([i i],[1 17],'k')
    plot([1 17],[i i],'k')
    plot([i i] + TimeBefore/Duration,[1 17],'r')
    plot([i i]+ 1 - TimeAfter/Duration,[1 17],'r')

end
set(gca,'Visible','off')
for id_elec=1:length(Positions)
    text(double(Positions(id_elec,1)),double(Positions(id_elec,2))+0.5,int2str(id_elec))
end


return

figure(1);
figure(2);

for ielec=28:252
    figure(1);
    plot(raster{ielec}(:,1),raster{ielec}(:,2),'.')
    
    figure(2);
    plot(data(ielec,:))
    
    pause
end



%14 28

% figure;
% plot(data(i,:))
% hold on
% plot(Filtered,'r')
% plot(Filtered - 6*MAD,'g')
% hold off
% 
% figure;
% plot(data(i,:)' - Filtered);
% 



return

% STimes = FrameTimes(1:length(Seq));
% MeanInterval = mean(diff(STimes));
% PossibleVals = sort(unique(Seq),'ascend');

i=165;%Electrode chosen

figure;

for iFull=1:length(FullTime)

    LengthTime = 6;
    StartTime = FullTime(iFull)/20000-3;


    fseek(fid,(i-1)*2+HeaderSize+2*252*StartTime*20000,'bof');
    data = fread(fid,LengthTime*20000,'uint16',251*2);
    %     save(['ElFile' int2str(i) '.dat'],'data','-mat')
    data = 0.1042*(double(data)-32767);

    SpikeThres = -6*median(abs(data-median(data)));

    SpikeTimes = find(data(1:end-1)>=SpikeThres & data(2:end)<=SpikeThres)+1;
    
    xt = (StartTime*20000+1:(StartTime+LengthTime)*20000);
    xt = xt / 20000;
    xt = xt - StartTime - 3;
    
    plot( xt ,data)

    iFull
    
    pause

end

